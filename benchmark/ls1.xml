<?xml version="1.0" encoding="UTF-8"?>
<jube>
    <benchmark name="MarDyn" outpath="bench_run">
        <comment>MarDyn performance modelling</comment>

        <!-- copy source code into the sandbox directory -->
        <fileset name="source_code">
            <copy>${mardyn_dir}/*</copy>
        </fileset>

        <step name="compile">
            <use from="params.xml">user_param</use>
            <use from="params.xml">compile_param</use>
            <use>source_code</use>
            <do>${load_modules}</do>
            <do>cd src; make clean; make TARGET=RELEASE PARTYPE=PAR OPENMP=1 CFG=icc-impi VECTORIZE_CODE=${vectorize_code} -j 28</do>
        </step>

        <fileset name="config">
            <copy>${jube_benchmark_home}/input</copy>
        </fileset>

        <!-- substitute pattern in submit script-->
        <substituteset name="executesub" init_with="platform.xml">
            <sub source="#ENV#">
                source /etc/profile.d/modules.sh
                ${load_modules}
                $env
            </sub>
        </substituteset>

        <substituteset name="inputsub">
            <iofile in="./${input_dir}/${input_file}" out="./${input_dir}/${input_file}"/>
            <sub source="#density#">${density}</sub>
            <sub source="#cutoff#">${cutoff}</sub>
            <sub source="#lj-centers#">${ljcenters}</sub>
            <sub source="#traversal#">${traversal}</sub>
            <sub source="#cellsInCutoff#">${cellsincutoff}</sub>
        </substituteset>

        <!-- prepare submit script and submit the job to the batch system-->
        <step name="exe" depend="compile">
            <use>config</use>
            <use from="params.xml">stat_param</use>
            <use from="params.xml">input_param</use>
            <use>inputsub</use>
            <use from="params.xml">systemParameter</use>
            <use>executesub</use>
            <use from="platform.xml">executeset</use>
            <use from="platform.xml">jobfiles</use>
            <do done_file="$done_file">${batch_command} ${submit_script}</do>
        </step>


        <patternset name="verify_pat">
            <pattern mode="pattern" name="time">Computation in main loop took:${jube_pat_bl}${jube_pat_fp}${jube_pat_bl}sec</pattern>
            <pattern mode="pattern" name="molsteps">Simulation speed:${jube_pat_bl}${jube_pat_fp}${jube_pat_bl}Molecule-updates per second.</pattern>
            <pattern mode="pattern" name="time_decomp">Decomposition took:${jube_pat_bl}${jube_pat_fp}${jube_pat_bl}sec</pattern>
            <pattern mode="pattern" name="time_com">Communication took:${jube_pat_bl}${jube_pat_fp}${jube_pat_bl}sec</pattern>
            <pattern mode="pattern" name="time_compute">Computation took:${jube_pat_bl}${jube_pat_fp}${jube_pat_bl}sec</pattern>
            <pattern mode="pattern" name="time_io">IO in main loop took:${jube_pat_bl}${jube_pat_fp}${jube_pat_bl}sec</pattern>

        </patternset>


        <analyser name="analyse_time">
            <analyse step="exe">
                <file use="verify_pat">${outlogfile}</file>
            </analyse>
        </analyser>

        <result>
            <use>analyse_time</use>
            <table name="runtime" style="csv">
                <column>nodes</column>
                <column>taskspernode</column>
                <column>threadspertask</column>
                <column>vectorize_code</column>
                <column>traversal</column>
                <column>cellsincutoff</column>
                <column>density</column>
                <column>cutoff</column>
                <column>ljcenters</column>
                <column>repeat</column>
                <column>time</column>
                <column>time_decomp</column>
                <column>time_com</column>
                <column>time_compute</column>
                <column>time_io</column>
                <column>molsteps</column>
            </table>
        </result>

    </benchmark>
</jube>
